{"Protocols/GameSprite.html#/s:FP15Diner_Deduction10GameSprite7onTouchFT_T_":{"name":"onTouch()","abstract":"<p>Handle tap behaviour</p>","parent_name":"GameSprite"},"Protocols/GameSprite.html#/s:FP15Diner_Deduction10GameSprite6onDragFT5touchCSo7UITouch_T_":{"name":"onDrag(touch:)","abstract":"<p>Handle drag behaviour</p>","parent_name":"GameSprite"},"Protocols/GameSprite.html#/s:FP15Diner_Deduction10GameSprite6onDropFT_T_":{"name":"onDrop()","abstract":"<p>Handle drop behaviour</p>","parent_name":"GameSprite"},"Protocols/GameSceneDelegate.html#/s:FP15Diner_Deduction17GameSceneDelegate9menuSceneFT_T_":{"name":"menuScene()","abstract":"<p>Switch to the menu scene</p>","parent_name":"GameSceneDelegate"},"Protocols/GameSceneDelegate.html#/s:FP15Diner_Deduction17GameSceneDelegate13gamePlaySceneFT_T_":{"name":"gamePlayScene()","abstract":"<p>Switch to the main game play scene</p>","parent_name":"GameSceneDelegate"},"Protocols/GameSceneDelegate.html#/s:FP15Diner_Deduction17GameSceneDelegate12gameWonSceneFT15previousGuessesSi_T_":{"name":"gameWonScene(previousGuesses:)","abstract":"<p>Switch to the game won scene and pass the number of guesses</p>","parent_name":"GameSceneDelegate"},"Protocols/GameSceneDelegate.html#/s:FP15Diner_Deduction17GameSceneDelegate13gameLostSceneFT_T_":{"name":"gameLostScene()","abstract":"<p>Switch to the game lost scene</p>","parent_name":"GameSceneDelegate"},"Protocols/ArrayShufflerProtocol.html#/s:FP15Diner_Deduction21ArrayShufflerProtocol7shuffleFT5arrayGSaP___GSaP__":{"name":"shuffle(array:)","parent_name":"ArrayShufflerProtocol"},"Protocols/ArrayShufflerProtocol.html":{"name":"ArrayShufflerProtocol","abstract":"<p>Protocol for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ArrayShuffler.html\">ArrayShuffler</a></code>.</p>"},"Protocols/GameSceneDelegate.html":{"name":"GameSceneDelegate","abstract":"<p>Delegate to switch between scenes in the game.</p>"},"Protocols/GameSprite.html":{"name":"GameSprite","abstract":"<p>Protocol for game sprites that need to respond to touch.</p>"},"Enums/PhysicsCategory.html#/s:FO15Diner_Deduction15PhysicsCategory10ingredientFMS0_S0_":{"name":"ingredient","parent_name":"PhysicsCategory"},"Enums/PhysicsCategory.html#/s:FO15Diner_Deduction15PhysicsCategory5pizzaFMS0_S0_":{"name":"pizza","parent_name":"PhysicsCategory"},"Enums/PhysicsCategory.html":{"name":"PhysicsCategory","abstract":"<p>Contains information for collision detection.</p>"},"Classes/AppDelegate.html#/s:vC15Diner_Deduction11AppDelegate6windowGSqCSo8UIWindow_":{"name":"window","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate11applicationFTCSo13UIApplication29didFinishLaunchingWithOptionsGSqGVs10DictionaryVSC29UIApplicationLaunchOptionsKeyP____Sb":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>Responsible for launching the main application</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate27applicationWillResignActiveFCSo13UIApplicationT_":{"name":"applicationWillResignActive(_:)","abstract":"<p>Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state. This method may eventually be used to pause the game. Currently not used.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate29applicationDidEnterBackgroundFCSo13UIApplicationT_":{"name":"applicationDidEnterBackground(_:)","abstract":"<p>This method releases shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. Currently not used.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate30applicationWillEnterForegroundFCSo13UIApplicationT_":{"name":"applicationWillEnterForeground(_:)","abstract":"<p>This method is called as part of the transition from the background to the active state. Currently not used.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate26applicationDidBecomeActiveFCSo13UIApplicationT_":{"name":"applicationDidBecomeActive(_:)","abstract":"<p>This method restarts any tasks that were paused (or not yet started) while the application was inactive. Currently not used.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:FC15Diner_Deduction11AppDelegate24applicationWillTerminateFCSo13UIApplicationT_":{"name":"applicationWillTerminate(_:)","abstract":"<p>Called when the application is about to terminate. Currently not used.</p>","parent_name":"AppDelegate"},"Classes/IngredientsListGenerator.html#/s:vC15Diner_Deduction24IngredientsListGenerator8generateGSaTSSV12CoreGraphics7CGFloatS2___":{"name":"generate","abstract":"<p>Creates an empty array of tuples to be populated with ingredient data on .init()</p>","parent_name":"IngredientsListGenerator"},"Classes/IngredientsListGenerator.html#/s:FC15Diner_Deduction24IngredientsListGeneratorcFT16totalIngredientsSi13arrayShufflerPS_21ArrayShufflerProtocol__S0_":{"name":"init(totalIngredients:arrayShuffler:)","abstract":"<p>Generate an array with ingredient data</p>","parent_name":"IngredientsListGenerator"},"Classes/GameSpriteNull.html#/s:FC15Diner_Deduction14GameSpriteNullcFT_S0_":{"name":"init()","parent_name":"GameSpriteNull"},"Classes/GameSpriteNull.html#/s:FC15Diner_Deduction14GameSpriteNull7onTouchFT_T_":{"name":"onTouch()","abstract":"<p>Handle tap behaviour</p>","parent_name":"GameSpriteNull"},"Classes/GameSpriteNull.html#/s:FC15Diner_Deduction14GameSpriteNull6onDragFT5touchCSo7UITouch_T_":{"name":"onDrag(touch:)","abstract":"<p>Handle drag behaviour</p>","parent_name":"GameSpriteNull"},"Classes/GameSpriteNull.html#/s:FC15Diner_Deduction14GameSpriteNull6onDropFT_T_":{"name":"onDrop()","abstract":"<p>Handle drop behaviour</p>","parent_name":"GameSpriteNull"},"Classes/GameSpriteNull.html#/s:FC15Diner_Deduction14GameSpriteNullcFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"GameSpriteNull"},"Classes/MenuScene.html#/s:vC15Diner_Deduction9MenuScene17gameSceneDelegateGSqPS_17GameSceneDelegate__":{"name":"gameSceneDelegate","abstract":"<p>Delegate to handle the displaying of game scenes.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:vC15Diner_Deduction9MenuScene12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>MenuScreen</q> texture atlas.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:vC15Diner_Deduction9MenuScene11startButtonCSo12SKSpriteNode":{"name":"startButton","abstract":"<p>Start button sprite.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:vC15Diner_Deduction9MenuScene10quitButtonCSo12SKSpriteNode":{"name":"quitButton","abstract":"<p>Quit button sprite.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene16createBackgroundFT_T_":{"name":"createBackground()","abstract":"<p>Creates a background with texture from the <q>MenuScreen</q> texture atlas.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene10createLogoFT_T_":{"name":"createLogo()","abstract":"<p>Creates a sprite for the Diner Deduction logo.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene17createStartButtonFT_T_":{"name":"createStartButton()","abstract":"<p>Creates a start <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code> and adds it to the scene.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene15addTextToSpriteFT6spriteCSo12SKSpriteNode4textSS4nameSS8addPulseSb_T_":{"name":"addTextToSprite(sprite:text:name:addPulse:)","abstract":"<p>Adds text to the start <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code> sprite.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScenecFT4sizeVSC6CGSize_S0_":{"name":"init(size:)","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene7didMoveFT2toCSo6SKView_T_":{"name":"didMove(to:)","abstract":"<p>Sets up the scene with various sprites</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene12touchesBeganFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesBegan(_:with:)","abstract":"<p>Detect button taps switch to either menu or game scenes using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScene33gameCenterViewControllerDidFinishFCSo26GKGameCenterViewControllerT_":{"name":"gameCenterViewControllerDidFinish(_:)","abstract":"<p>Dismiss the scene when the user has finished interacting with it.</p>","parent_name":"MenuScene"},"Classes/MenuScene.html#/s:FC15Diner_Deduction9MenuScenecFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"MenuScene"},"Classes/Customer/init(ingredients:totalIngredients:arrayShuffler:).html#/s:FFC15Diner_Deduction8CustomercFT11ingredientsGSaTSSV12CoreGraphics7CGFloatS2___16totalIngredientsSi13arrayShufflerPS_21ArrayShufflerProtocol__S0_L_17getIngredientTypeFT4typeSS7offsetXS2_7offsetYS2__SS":{"name":"getIngredientType(type:offsetX:offsetY:)","abstract":"<p>Undocumented</p>","parent_name":"init(ingredients:totalIngredients:arrayShuffler:)"},"Classes/Customer.html#/s:vC15Diner_Deduction8CustomerP33_18B3EBB9B40E9D92E633542B3BBDC07418correctIngredientsGVs3SetSS_":{"name":"correctIngredients","abstract":"<p>Correct ingredients as a set.</p>","parent_name":"Customer"},"Classes/Customer/init(ingredients:totalIngredients:arrayShuffler:).html":{"name":"init(ingredients:totalIngredients:arrayShuffler:)","parent_name":"Customer"},"Classes/Customer.html#/s:FC15Diner_Deduction8Customer16checkIngredientsFV10Foundation12NotificationT_":{"name":"checkIngredients(_:)","abstract":"<p>This method is called in response to receiving a <code>PizzaSubmitted</code> notification, and posts either a <code>GameWon</code> or <code>GameFailed</code> notification depending on if the guess is correct or not.</p>","parent_name":"Customer"},"Classes/Pizza.html#/s:vC15Diner_Deduction5Pizza12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:vC15Diner_Deduction5PizzaP33_A47597A380F6F742A975F59D908CA86711ingredientsGVs3SetSS_":{"name":"ingredients","abstract":"<p>Set of ingredients added to the pizza.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5PizzacFT5frameVSC6CGRect16totalIngredientsSi_S0_":{"name":"init(frame:totalIngredients:)","abstract":"<p>Sets up the pizza sprite and adds a physics body to it. Listens for various game events.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza11submitPizzaFT_T_":{"name":"submitPizza()","abstract":"<p>Checks the number of ingredients added to the pizza and posts a relevant notification.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza13addIngredientFV10Foundation12NotificationT_":{"name":"addIngredient(_:)","abstract":"<p>Adds an ingredient to the list.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza16removeIngredientFCSo14NSNotificationT_":{"name":"removeIngredient(_:)","abstract":"<p>Removes and ingredient from the list.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza20removeAllIngredientsFCSo14NSNotificationT_":{"name":"removeAllIngredients(_:)","abstract":"<p>Clears all ingredients from the list.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza7onTouchFT_T_":{"name":"onTouch()","abstract":"<p>Handle tap behaviour. Currently not used.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza6onDragFT5touchCSo7UITouch_T_":{"name":"onDrag(touch:)","abstract":"<p>Handle drag behaviour. Currently not used.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5Pizza6onDropFT_T_":{"name":"onDrop()","abstract":"<p>Handle drop behaviour. Currently not used.</p>","parent_name":"Pizza"},"Classes/Pizza.html#/s:FC15Diner_Deduction5PizzacFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"Pizza"},"Classes/GameViewController.html#/s:vC15Diner_Deduction18GameViewControllerP33_F36AC2F03F3E2B28056AF665D0360A966skViewGSQCSo6SKView_":{"name":"skView","abstract":"<p>Undocumented</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController22viewWillLayoutSubviewsFT_T_":{"name":"viewWillLayoutSubviews()","abstract":"<p>Controls what game scene we are currently displaying</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController9menuSceneFT_T_":{"name":"menuScene()","abstract":"<p>Displays the menu scene using a delegate</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController13gamePlaySceneFT_T_":{"name":"gamePlayScene()","abstract":"<p>Displays the game play scene using a delegate</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController12gameWonSceneFT15previousGuessesSi_T_":{"name":"gameWonScene(previousGuesses:)","abstract":"<p>Displays the game won scene using a delegate</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController13gameLostSceneFT_T_":{"name":"gameLostScene()","abstract":"<p>Displays the game lost scene using a delegate</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:vC15Diner_Deduction18GameViewController16shouldAutorotateSb":{"name":"shouldAutorotate","abstract":"<p>Ensure the game autorotates</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:vC15Diner_Deduction18GameViewController30supportedInterfaceOrientationsVSC26UIInterfaceOrientationMask":{"name":"supportedInterfaceOrientations","abstract":"<p>Ensure the game is always set to landscape</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:FC15Diner_Deduction18GameViewController23didReceiveMemoryWarningFT_T_":{"name":"didReceiveMemoryWarning()","abstract":"<p>Release any cached data, images, etc that aren&rsquo;t in use</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:vC15Diner_Deduction18GameViewController22prefersStatusBarHiddenSb":{"name":"prefersStatusBarHidden","abstract":"<p>Always hides the status bar</p>","parent_name":"GameViewController"},"Classes/PreviousGuesses.html#/s:vC15Diner_Deduction15PreviousGuesses7sectionCSo12SKSpriteNode":{"name":"section","abstract":"<p>Sprite for the previous guess section.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:vC15Diner_Deduction15PreviousGuesses15previousGuessesGSaCS_13PreviousGuess_":{"name":"previousGuesses","abstract":"<p>Array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PreviousGuess.html\">PreviousGuess</a></code> items.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:vC15Diner_Deduction15PreviousGuesses5totalSi":{"name":"total","abstract":"<p>Keeps track of the total number of guesses.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:FC15Diner_Deduction15PreviousGuessescFT_S0_":{"name":"init()","abstract":"<p>Creates a sprite for the previous guess section. Adds a listener for the <q>GameFailed</q> state.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:FC15Diner_Deduction15PreviousGuesses24moveExistingGuessesAlongFT_T_":{"name":"moveExistingGuessesAlong()","abstract":"<p>Animation to slide the previous guess boxes along and destroy the ones offscreen.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:FC15Diner_Deduction15PreviousGuesses15displayNewGuessFT12itemsGuessedGVs3SetSS_20numberOfItemsCorrectSi_T_":{"name":"displayNewGuess(itemsGuessed:numberOfItemsCorrect:)","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PreviousGuess.html\">PreviousGuess</a></code> and adds it to the array.</p>","parent_name":"PreviousGuesses"},"Classes/PreviousGuesses.html#/s:FC15Diner_Deduction15PreviousGuesses21updatePreviousGuessesFV10Foundation12NotificationT_":{"name":"updatePreviousGuesses(_:)","abstract":"<p>Respond to the <q>GameFailed</q> notification by displaying a new previous guess and displaying how many ingredients were correct.</p>","parent_name":"PreviousGuesses"},"Classes/NotificationBar.html#/s:vC15Diner_Deduction15NotificationBar3barCSo12SKSpriteNode":{"name":"bar","abstract":"<p>Sprite for the bar.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:vC15Diner_Deduction15NotificationBar7messageCSo11SKLabelNode":{"name":"message","abstract":"<p>Text label for the bar.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:vC15Diner_Deduction15NotificationBar12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:vC15Diner_Deduction15NotificationBarP33_690D44CB863DD13851974FDE32B3CBBA17messageDictionaryGVs10DictionarySSSS_":{"name":"messageDictionary","abstract":"<p>Dictionary to hold various messages.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:FC15Diner_Deduction15NotificationBarcFT10frameWidthV12CoreGraphics7CGFloat11frameHeightS2_16totalIngredientsSi_S0_":{"name":"init(frameWidth:frameHeight:totalIngredients:)","abstract":"<p>Sets up a message dictionary with the various messages. Creates a sprite for the bar with a text label. Listens for various game notifications to update the message text.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:FC15Diner_Deduction15NotificationBar12pulseMessageFT_T_":{"name":"pulseMessage()","abstract":"<p>Pulse animation to make the message text more noticable.</p>","parent_name":"NotificationBar"},"Classes/NotificationBar.html#/s:FC15Diner_Deduction15NotificationBar13updateMessageFV10Foundation12NotificationT_":{"name":"updateMessage(_:)","abstract":"<p>Update the label text shown in the notification bar.</p>","parent_name":"NotificationBar"},"Classes/Ingredient.html#/s:vC15Diner_Deduction10Ingredient12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>Ingredients</q> texture atlas.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:vC15Diner_Deduction10Ingredient16originalPositionVSC7CGPoint":{"name":"originalPosition","abstract":"<p>Sets up a default position for the ingredient (this will be set properly on init).</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10IngredientcFT4nameSS5imageSS4sizeVSC6CGSize9positionXV12CoreGraphics7CGFloat9positionYS3__S0_":{"name":"init(name:image:size:positionX:positionY:)","abstract":"<p>Sets up the ingredient sprite with its position and adds a physics body to it. Listens for a <q>GameFailed</q> notification to spring an item back to its original position.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10Ingredient28springBackToOriginalPositionFT_T_":{"name":"springBackToOriginalPosition()","abstract":"<p>Animation to make an ingredient spring back to its original position.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10Ingredient16triggerCloudPuffFT_T_":{"name":"triggerCloudPuff()","abstract":"<p>Triggers a small cloud puff animation underneath the ingredient. Destroys the emitter after a short duration for performance reasons.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10Ingredient7onTouchFT_T_":{"name":"onTouch()","abstract":"<p>Handles tap behaviour. Not used.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10Ingredient6onDragFT5touchCSo7UITouch_T_":{"name":"onDrag(touch:)","abstract":"<p>Handles drag behaviour. Moves the ingredient sprite to its new location.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10Ingredient6onDropFT_T_":{"name":"onDrop()","abstract":"<p>Handles drop behaviour. Detects collision with the pizza,and either places the item on the pizza with a cloud puff animation, or springs the item back to its original position. Posts notifications about whether an ingredient has been removed or addded to the pizza.</p>","parent_name":"Ingredient"},"Classes/Ingredient.html#/s:FC15Diner_Deduction10IngredientcFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"Ingredient"},"Classes/GameWonScene.html#/s:vC15Diner_Deduction12GameWonScene17gameSceneDelegateGSqPS_17GameSceneDelegate__":{"name":"gameSceneDelegate","abstract":"<p>Delegate to handle the displaying of game scenes.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:vC15Diner_Deduction12GameWonScene12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:vC15Diner_Deduction12GameWonSceneP33_460A3ED3007D810E63A488B0B754190712summaryPanelCSo12SKSpriteNode":{"name":"summaryPanel","abstract":"<p>Summary panel to display the game won text.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:vC15Diner_Deduction12GameWonSceneP33_460A3ED3007D810E63A488B0B754190715playAgainButtonCSo12SKSpriteNode":{"name":"playAgainButton","abstract":"<p>Play again button sprite.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:vC15Diner_Deduction12GameWonSceneP33_460A3ED3007D810E63A488B0B754190718returnToMenuButtonCSo12SKSpriteNode":{"name":"returnToMenuButton","abstract":"<p>Menu button sprite.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScenecFT4sizeVSC6CGSize_S0_":{"name":"init(size:)","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene7didMoveFT2toCSo6SKView_T_":{"name":"didMove(to:)","abstract":"<p>When the scene loads, this method creates and displays all the elements in the scene.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene16createBackgroundFT_T_":{"name":"createBackground()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Background.html\">Background</a></code> for the scene.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene18createSummaryPanelFT_T_":{"name":"createSummaryPanel()","abstract":"<p>Creates a summary panel to display text.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene14createSparklesFT_T_":{"name":"createSparkles()","abstract":"<p>Creates sparkles particle effect.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene21createPlayAgainButtonFT_T_":{"name":"createPlayAgainButton()","abstract":"<p>Creates a play again button sprite using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code>.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene24createReturnToMenuButtonFT_T_":{"name":"createReturnToMenuButton()","abstract":"<p>Creates a menu button sprite using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code>.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene15addTextToSpriteFT6spriteCSo12SKSpriteNode4textSS4nameSS8positionVSC7CGPoint_T_":{"name":"addTextToSprite(sprite:text:name:position:)","abstract":"<p>Updates a given sprite with new text.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene21addTextToSummaryPanelFT_T_":{"name":"addTextToSummaryPanel()","abstract":"<p>Updates the summary panel with text based on the number of guesses it took to win.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene12touchesBeganFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesBegan(_:with:)","abstract":"<p>Detect button taps switch to either menu or game scenes using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScene33gameCenterViewControllerDidFinishFCSo26GKGameCenterViewControllerT_":{"name":"gameCenterViewControllerDidFinish(_:)","abstract":"<p>Dismiss the scene when the user has finished interacting with it.</p>","parent_name":"GameWonScene"},"Classes/GameWonScene.html#/s:FC15Diner_Deduction12GameWonScenecFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"GameWonScene"},"Classes/PreviousGuess.html#/s:vC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:vC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F23ingredientsTextureAtlasCSo14SKTextureAtlas":{"name":"ingredientsTextureAtlas","abstract":"<p><q>Ingredients</q> texture atlas.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:vC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F19ingredientPositionsGVs10DictionarySiVSC7CGPoint_":{"name":"ingredientPositions","abstract":"<p>Dictionary of fixed positions for the ingredients.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F8addLabelFT20numberOfItemsCorrectSi_T_":{"name":"addLabel(numberOfItemsCorrect:)","abstract":"<p>Adds a label to the guess box.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F14addPizzaSpriteFT12itemsGuessedGVs3SetSS_20numberOfItemsCorrectSi_T_":{"name":"addPizzaSprite(itemsGuessed:numberOfItemsCorrect:)","abstract":"<p>Adds a pizza sprite to the guess box.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F27addIngredientsToPizzaSpriteFT5pizzaCSo12SKSpriteNode12itemsGuessedGVs3SetSS_20numberOfItemsCorrectSi_T_":{"name":"addIngredientsToPizzaSprite(pizza:itemsGuessed:numberOfItemsCorrect:)","abstract":"<p>Adds a ingredient sprites to the guess box.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuessP33_CF6D4582523C533C9D984ED8462D0D9F7slideUpFT9xPositionV12CoreGraphics7CGFloat23spriteOffScreenPositionVSC7CGPoint_T_":{"name":"slideUp(xPosition:spriteOffScreenPosition:)","abstract":"<p>Side up animation for the guess box</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuess9moveAlongFT_T_":{"name":"moveAlong()","abstract":"<p>Move along animation for the guess box.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuesscFT12itemsGuessedGVs3SetSS_20numberOfItemsCorrectSi9xPositionV12CoreGraphics7CGFloat_S0_":{"name":"init(itemsGuessed:numberOfItemsCorrect:xPosition:)","abstract":"<p>Creates a guess box sprite with a physics body. Adds a pizza with ingredient guesses and a label. Triggers the slide up animation.</p>","parent_name":"PreviousGuess"},"Classes/PreviousGuess.html#/s:FC15Diner_Deduction13PreviousGuesscFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"PreviousGuess"},"Classes/Button.html#/s:vC15Diner_Deduction6Button12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p>The button texture atlas.</p>","parent_name":"Button"},"Classes/Button.html#/s:vC15Diner_Deduction6ButtonP33_5A50377B0DB973E49B94B4A1D42FC2DA6actionSS":{"name":"action","abstract":"<p>The name of the action will be set after the button is initialised.</p>","parent_name":"Button"},"Classes/Button.html#/s:FC15Diner_Deduction6ButtoncFT9imageNameSS18notificationActionSS4sizeVSC6CGSize8positionVSC7CGPoint_S0_":{"name":"init(imageName:notificationAction:size:position:)","abstract":"<p>The button texture atlas.</p>","parent_name":"Button"},"Classes/Button.html#/s:FC15Diner_Deduction6Button7onTouchFT_T_":{"name":"onTouch()","abstract":"<p>Posts a notification with the name of the <code>notificationAction</code> parameter.</p>","parent_name":"Button"},"Classes/Button.html#/s:FC15Diner_Deduction6Button6onDragFT5touchCSo7UITouch_T_":{"name":"onDrag(touch:)","abstract":"<p>Adds <code>onDrag</code> to conform with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code> protocol. Unused.</p>","parent_name":"Button"},"Classes/Button.html#/s:FC15Diner_Deduction6Button6onDropFT_T_":{"name":"onDrop()","abstract":"<p>Adds <code>onDrop</code> to conform with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code> protocol. Unused.</p>","parent_name":"Button"},"Classes/Button.html#/s:FC15Diner_Deduction6ButtoncFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"Button"},"Classes/GameLostScene.html#/s:vC15Diner_Deduction13GameLostScene17gameSceneDelegateGSqPS_17GameSceneDelegate__":{"name":"gameSceneDelegate","abstract":"<p>Delegate to handle the displaying of game scenes.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:vC15Diner_Deduction13GameLostScene12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:vC15Diner_Deduction13GameLostSceneP33_C9B01952440634D3D3D20C3961AD0CE112summaryPanelCSo12SKSpriteNode":{"name":"summaryPanel","abstract":"<p>Summary panel to display the <q>Oh no! You ran out of time</q> text.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:vC15Diner_Deduction13GameLostSceneP33_C9B01952440634D3D3D20C3961AD0CE115playAgainButtonCSo12SKSpriteNode":{"name":"playAgainButton","abstract":"<p>Play again button sprite.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:vC15Diner_Deduction13GameLostSceneP33_C9B01952440634D3D3D20C3961AD0CE118returnToMenuButtonCSo12SKSpriteNode":{"name":"returnToMenuButton","abstract":"<p>Menu button sprite.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScenecFT4sizeVSC6CGSize_S0_":{"name":"init(size:)","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene16createBackgroundFT_T_":{"name":"createBackground()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Background.html\">Background</a></code> for the scene.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene18createSummaryPanelFT_T_":{"name":"createSummaryPanel()","abstract":"<p>Creates a summary panel to display text.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene21createPlayAgainButtonFT_T_":{"name":"createPlayAgainButton()","abstract":"<p>Creates a play again button sprite using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code>.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene24createReturnToMenuButtonFT_T_":{"name":"createReturnToMenuButton()","abstract":"<p>Creates a menu button sprite using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code>.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene15addTextDropDownFT8textNodeCSo11SKLabelNode_T_":{"name":"addTextDropDown(textNode:)","abstract":"<p>Text dropping down animation.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene12addTextPulseFT8textNodeCSo11SKLabelNode_T_":{"name":"addTextPulse(textNode:)","abstract":"<p>Text pulsing animation.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene15addTextToSpriteFT6spriteCSo12SKSpriteNode4textSS4nameSS8addPulseSb8dropDownSb_T_":{"name":"addTextToSprite(sprite:text:name:addPulse:dropDown:)","abstract":"<p>Updates a given sprite with new text and an optional animation. This is used for displaying text on buttons as well as the summary panel.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene7didMoveFT2toCSo6SKView_T_":{"name":"didMove(to:)","abstract":"<p>When the scene loads, this method creates and displays all the elements in the scene.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene12touchesBeganFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesBegan(_:with:)","abstract":"<p>Detect button taps switch to either menu or game scenes using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScene33gameCenterViewControllerDidFinishFCSo26GKGameCenterViewControllerT_":{"name":"gameCenterViewControllerDidFinish(_:)","abstract":"<p>Dismiss the scene when the user has finished interacting with it.</p>","parent_name":"GameLostScene"},"Classes/GameLostScene.html#/s:FC15Diner_Deduction13GameLostScenecFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"GameLostScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlayScene17gameSceneDelegateGSqPS_17GameSceneDelegate__":{"name":"gameSceneDelegate","abstract":"<p>Delegate to handle the displaying of game scenes.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlayScene12textureAtlasCSo14SKTextureAtlas":{"name":"textureAtlas","abstract":"<p><q>GameItems</q> texture atlas.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlaySceneP33_D6327719D99EC5393FB72C22C0C4CFF312selectedNodeGSQPS_10GameSprite__":{"name":"selectedNode","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code> that the player has most recently interacted with.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:ZvC15Diner_Deduction13GamePlayScene8customerGSQCS_8Customer_":{"name":"customer","abstract":"<p>Sets up a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Customer.html\">Customer</a></code> when initialised.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:ZvC15Diner_Deduction13GamePlayScene15notificationBarGSQCS_15NotificationBar_":{"name":"notificationBar","abstract":"<p>Sets up a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NotificationBar.html\">NotificationBar</a></code> when initialised.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:ZvC15Diner_Deduction13GamePlayScene15previousGuessesGSQCS_15PreviousGuesses_":{"name":"previousGuesses","abstract":"<p>Sets up a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PreviousGuesses.html\">PreviousGuesses</a></code> when initialised.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlayScene13countDownTextGSQCSo11SKLabelNode_":{"name":"countDownText","abstract":"<p>Sets up the countdown text.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlayScene5timerGSQCSo5Timer_":{"name":"timer","abstract":"<p>Sets up a new <code>Timer</code> when initialised.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlayScene11secondsLeftSi":{"name":"secondsLeft","abstract":"<p>The length of the game - currently always a minute.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScenecFT4sizeVSC6CGSize_S0_":{"name":"init(size:)","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene7didMoveFT2toCSo6SKView_T_":{"name":"didMove(to:)","abstract":"<p>When the scene loads, a randomised set of ingredients is generated using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IngredientsListGenerator.html\">IngredientsListGenerator</a></code>, then the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Customer.html\">Customer</a></code> selects three of them as the correct answer (to form the Model). It also displays all the View elements in the scene (the pizza, the ingredients, the timer, etc.) and starts a <code>Timer</code>. It listens for a <q>GameWon</q> notification, to move to the game won scene using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene16createBackgroundFT_T_":{"name":"createBackground()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Background.html\">Background</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene22createCountDownDisplayFT_T_":{"name":"createCountDownDisplay()","abstract":"<p>Creates a view for the countdown timer.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene21createPreviousGuessesFT_T_":{"name":"createPreviousGuesses()","abstract":"<p>Create <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PreviousGuesses.html\">PreviousGuesses</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene21createNotificationBarFT16totalIngredientsSi_T_":{"name":"createNotificationBar(totalIngredients:)","abstract":"<p>Create a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NotificationBar.html\">NotificationBar</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene11createPizzaFT16totalIngredientsSi_T_":{"name":"createPizza(totalIngredients:)","abstract":"<p>Create a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Pizza.html\">Pizza</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene17createIngredientsFT11ingredientsGSaTSSV12CoreGraphics7CGFloatS2____T_":{"name":"createIngredients(ingredients:)","abstract":"<p>Iterate through an array of ingredients and create views for each.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene16createIngredientFT10ingredientSS7offsetXV12CoreGraphics7CGFloat7offsetYS2__T_":{"name":"createIngredient(ingredient:offsetX:offsetY:)","abstract":"<p>Create <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Ingredient.html\">Ingredient</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene18createSubmitButtonFT_T_":{"name":"createSubmitButton()","abstract":"<p>Create a submit <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Button.html\">Button</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene12timeToStringFT4timeSd_SS":{"name":"timeToString(time:)","abstract":"<p>Convert a time interval into <q>00:00</q> string format.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene11updateTimerFT_T_":{"name":"updateTimer()","abstract":"<p>Update the countdown timer text and use the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code> to end the game and switch to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GameLostScene.html\">GameLostScene</a></code> if time has run out.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene11whenGameWonFT_T_":{"name":"whenGameWon()","abstract":"<p>End the game and switch to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GameWonScene.html\">GameWonScene</a></code> passing in the number of guesses it took, using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene12touchesBeganFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesBegan(_:with:)","abstract":"<p>Handle tap behaviour. If the tap is on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code>, then update <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlaySceneP33_D6327719D99EC5393FB72C22C0C4CFF312selectedNodeGSQPS_10GameSprite__\">selectedNode</a></code> accordingly and call its <code>.onTouch()</code> function.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene12touchesMovedFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesMoved(_:with:)","abstract":"<p>Handle drag behaviour. If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlaySceneP33_D6327719D99EC5393FB72C22C0C4CFF312selectedNodeGSQPS_10GameSprite__\">selectedNode</a></code> is set, call its <code>.onDrag()</code> function.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene12touchesEndedFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesEnded(_:with:)","abstract":"<p>Handle drop behaviour. If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlaySceneP33_D6327719D99EC5393FB72C22C0C4CFF312selectedNodeGSQPS_10GameSprite__\">selectedNode</a></code> is set, call its <code>.onDrop()</code> function.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene16touchesCancelledFTGVs3SetCSo7UITouch_4withGSqCSo7UIEvent__T_":{"name":"touchesCancelled(_:with:)","abstract":"<p>Handle touch cancelled behaviour. If <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GamePlayScene.html#/s:vC15Diner_Deduction13GamePlaySceneP33_D6327719D99EC5393FB72C22C0C4CFF312selectedNodeGSQPS_10GameSprite__\">selectedNode</a></code> is set, call its <code>.onDrop()</code> function.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScene6updateFSdT_":{"name":"update(_:)","abstract":"<p>Called before each frame is rendered. Not currently used.</p>","parent_name":"GamePlayScene"},"Classes/GamePlayScene.html#/s:FC15Diner_Deduction13GamePlayScenecFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"<p>Satisfy the <code>NSCoder</code> required init, as this class inherits from others.</p>","parent_name":"GamePlayScene"},"Classes/Background.html#/s:vC15Diner_Deduction10Background6spriteCSo12SKSpriteNode":{"name":"sprite","abstract":"<p>The background as an <code>SKSprite</code>.</p>","parent_name":"Background"},"Classes/Background.html#/s:FC15Diner_Deduction10BackgroundcFT11textureNameSS9frameSizeVSC6CGSize_S0_":{"name":"init(textureName:frameSize:)","parent_name":"Background"},"Classes/ArrayShuffler.html#/s:FP15Diner_Deduction21ArrayShufflerProtocol7shuffleFT5arrayGSaP___GSaP__":{"name":"shuffle(array:)","parent_name":"ArrayShuffler"},"Classes/ArrayShuffler.html":{"name":"ArrayShuffler","abstract":"<p>Pass in an array and it will rearrange the items in the array using a Fisher-Yates Shuffle. This implements an object shuffler on <code>GKRandomSource</code>, which is part of <code>GameKit</code>.</p>"},"Classes/Background.html":{"name":"Background","abstract":"<p>Creates an <code>SKSpriteNode</code> to use as a background. Sets its texture, size, position, z-position and anchorpoint.</p>"},"Classes/GamePlayScene.html":{"name":"GamePlayScene","abstract":"<p>The main gameplay scene sets up a new game and starts the timer. It gets the Model for the game from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/IngredientsListGenerator.html\">IngredientsListGenerator</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Customer.html\">Customer</a></code>. It displays all the View elements for the game: a notification bar with information, the countdown timer, the ingredients, a pizza to drag the ingredients onto, a submit button, and previous guesses (if any have been made).</p>"},"Classes/GameLostScene.html":{"name":"GameLostScene","abstract":"<p>This scene appears when the timer has run out and the player has not guessed the correct combination of ingredients. It has a panel saying, <q>Oh no! You ran out of time</q>, and buttons to either play again, or return to the menu screen.</p>"},"Classes/Button.html":{"name":"Button","abstract":"<p>Used by all the buttons in the game and menus. Sets position, and texture of the button from the <q>Buttons</q> texture atlas. Handles tap behaviour.</p>"},"Classes/PreviousGuess.html":{"name":"PreviousGuess","abstract":"<p>Creates a previous guess box displaying a pizza with the guessed ingredients and a label showing how many were right. Animates it by sliding it up onto the screen.</p>"},"Classes/GameWonScene.html":{"name":"GameWonScene","abstract":"<p>This scene appears when the player has correctly guessed the ingredients requested by the customer. It has a panel displaying different text depending on the number of guesses it took to win, and a sparkle particle effect in the background. The user has the option of playing again or returning to the menu.</p>"},"Classes/Ingredient.html":{"name":"Ingredient","abstract":"<p>This class creates an ingredient sprite with a physics body for collision detection with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Pizza.html\">Pizza</a></code>. It also handles touch behaviour and animations for the ingredient.</p>"},"Classes/NotificationBar.html":{"name":"NotificationBar","abstract":"<p>This notification bar sits at top of the screen and displays text to update the player about the game state.</p>"},"Classes/PreviousGuesses.html":{"name":"PreviousGuesses","abstract":"<p>Listens for the <q>GameFailed</q> notification and adds a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PreviousGuess.html\">PreviousGuess</a></code> to an array of previous guesses. Slides them across the screen when new ones are added, and destroys the oldest when there are more than 3 on the screen at a time.</p>"},"Classes/GameViewController.html":{"name":"GameViewController","abstract":"<p>Controls the main game scenes in co-ordination with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSceneDelegate.html\">GameSceneDelegate</a></code>.</p>"},"Classes/Pizza.html":{"name":"Pizza","abstract":"<p>This class creates a pizza sprite with a physics body for collision detection with the various instances of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Ingredient.html\">Ingredient</a></code>. It keeps track of what ingredients have been added to it, and listens for various game events.</p>"},"Classes/Customer.html":{"name":"Customer","abstract":"<p>The Customer selects the correct ingredients from a list of the available ingredients. It listens for the <q>PizzaSubmitted</q> event, compares the submitted ingredients to the correct ingredients, then posts either a <q>GameWon</q> or <q>GameFailed</q> notification. Please note that <q>GameFailed</q> is not the same as <q>GameLost</q> - <q>GameFailed</q> denotes an incorrect guess and the game continues. Only the expired timer posts a <q>GameLost</q> notification.</p>"},"Classes/MenuScene.html":{"name":"MenuScene","abstract":"<p>This scene appears when game initially loads, or when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GameViewController.html\">GameViewController</a></code> switches to this scene.</p>"},"Classes/GameSpriteNull.html":{"name":"GameSpriteNull","abstract":"<p>Null version of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code>. This is needed so that the <code>selectedNode</code> in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GamePlayScene.html\">GamePlayScene</a></code> always conforms to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code> protocol. It is an null object for when the player taps something other than an instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GameSprite.html\">GameSprite</a></code> (such as the background).</p>"},"Classes/IngredientsListGenerator.html":{"name":"IngredientsListGenerator","abstract":"<p>Has a list of all the possible ingredients and all the possible positions for them to be in. Selects a designated number of ingredients from the total list randomly (currently this is always 3), and returns an array of tuples with information about their name, offsetX and offsetY.</p>"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>The Application Delegate receives application-level messages, and can respond accordingly.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}